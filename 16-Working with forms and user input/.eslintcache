[{"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\index.js":"1","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\App.js":"2","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\SimpleInput.js":"3","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input.js":"4","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\BasicForm.js":"5","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input-baseInput.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":213,"mtime":1658496188709,"results":"9","hashOfConfig":"8"},{"size":2039,"mtime":1658496146509,"results":"10","hashOfConfig":"8"},{"size":694,"mtime":1658495594127,"results":"11","hashOfConfig":"8"},{"size":3180,"mtime":1658536772601,"results":"12","hashOfConfig":"8"},{"size":694,"mtime":1658534707269,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q5f4tb",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\index.js",[],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\App.js",["28"],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\SimpleInput.js",["29"],"import useInput from '../hooks/use-input';\nconst SimpleInput = (props) => {\n  const {value: enteredName, \n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError, \n    valueChangeHandler: nameChangedHandler, \n    reset: resetNameInput,\n    inputBlurHandler: nameBlurHandler } = useInput(value=>value.trim() != '');\n  const {value: enteredEmail,isValid: enteredEmailIsValid,hasError: emailInputHasError,valueChangeHandler:emailChangedHandler,reset:resetEmailInput,inputBlurHandler: emailBlurHandler} = useInput(value=>value.includes('@'));\n  // const nameInputRef = useRef();\n\n  let formIsValid = false;\n  if(enteredNameIsValid && enteredEmailIsValid){\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event =>{\n    event.preventDefault();\n    if (!enteredNameIsValid){\n      return\n    }\n    console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n    // nameInputRef.current.value =''; Not IDEAl , don't manipulate the dom\n    resetNameInput();\n    resetEmailInput();\n  }\n\n\n  const nameInputClasses = nameInputHasError;\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Email is not valid must contain @</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["30","31"],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input.js",[],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\BasicForm.js",["32","33","34"],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input-baseInput.js",[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":19},{"ruleId":"39","severity":1,"message":"40","line":8,"column":72,"nodeType":"41","messageId":"42","endLine":8,"endColumn":74},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"35","severity":1,"message":"47","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"48","line":1,"column":27,"nodeType":"37","messageId":"38","endLine":1,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":4,"column":46,"nodeType":"41","messageId":"42","endLine":4,"endColumn":48},"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'useState' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]