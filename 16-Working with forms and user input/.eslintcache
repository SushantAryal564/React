[{"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\index.js":"1","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\App.js":"2","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\SimpleInput.js":"3","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input.js":"4","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\BasicForm.js":"5","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input-baseInput.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":216,"mtime":1671433219783,"results":"9","hashOfConfig":"8"},{"size":3926,"mtime":1671451131598,"results":"10","hashOfConfig":"8"},{"size":694,"mtime":1658495594127,"results":"11","hashOfConfig":"8"},{"size":3180,"mtime":1658536772601,"results":"12","hashOfConfig":"8"},{"size":1253,"mtime":1671454646373,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1iv3z2t",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\index.js",[],["29","30"],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\App.js",["31"],"import BasicForm from \"./components/BasicForm\";\nimport SimpleInput from \"./components/SimpleInput\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\SimpleInput.js",["32"],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input.js",[],"D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\components\\BasicForm.js",["33","34","35"],"import React, { useState, useRef } from \"react\";\nimport useInputBase from \"../hooks/use-input-baseInput\";\nconst BasicForm = (props) => {\n  const isNotEmpty = (value) => value.trim() != \"\";\n  const isEmail = (value) => value.includes(\"@\");\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputIsInValid,\n    valueInputHandler: firstNameInputHandler,\n    BlurHandler: firstInputBlurHandler,\n    reset: resetFirstName,\n  } = useInputBase(isNotEmpty);\n\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputIsInValid,\n    valueInputHandler: lastNameInputHandler,\n    BlurHandler: lastInputBlurHandler,\n    reset: resetLastName,\n  } = useInputBase(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputIsInValid,\n    valueInputHandler: emailInputHandler,\n    BlurHandler: emailInputBlurHandler,\n    reset: resetEmail,\n  } = useInputBase(isEmail);\n\n  let formIsValid = false;\n\n  if (\n    enteredEmailIsValid &&\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const formSubmmitHandler = (event) => {\n    event.preventDefault();\n    if (!enteredFirstNameIsValid) {\n      return;\n    }\n    if (!enteredLastNameIsValid) {\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  function checkit(boolean_value) {\n    return boolean_value ? \"form-control invalid\" : \"form-control\";\n  }\n\n  return (\n    <form onSubmit={formSubmmitHandler}>\n      <div className=\"control-group\">\n        <div className={checkit(firstNameInputIsInValid)}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameInputHandler}\n            value={enteredFirstName}\n            onBlur={firstInputBlurHandler}\n          />\n          {firstNameInputIsInValid && (\n            <p className=\"error-text\">First Name must not be empty</p>\n          )}\n        </div>\n        <div className={checkit(lastNameInputIsInValid)}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameInputHandler}\n            value={enteredLastName}\n            onBlur={lastInputBlurHandler}\n          />\n          {lastNameInputIsInValid && (\n            <p className=\"error-text\">Last Name must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={checkit(emailInputIsInValid)}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailInputHandler}\n          value={enteredEmail}\n          onBlur={emailInputBlurHandler}\n        />\n        {emailInputIsInValid && (\n          <p className=\"error-text\">Email must contain @</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","D:\\Sushant Aryal\\Programming\\React\\Lecture practise\\16-Working with forms and user input\\src\\hooks\\use-input-baseInput.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":10,"column":40,"nodeType":"46","messageId":"47","endLine":10,"endColumn":42},{"ruleId":"40","severity":1,"message":"48","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"49","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":33},{"ruleId":"44","severity":1,"message":"45","line":4,"column":46,"nodeType":"46","messageId":"47","endLine":4,"endColumn":48},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'BasicForm' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]